@model CaseManagement.ViewModels.Cases.Output.AllCasesOutputModel

<div class="col-md-4 mx-auto text-center">
    <section>
        <h4>Cases</h4>
        <hr />
        <a class="btn btn-primary" asp-controller="Cases" asp-action="Create">Create Case</a>
        <form asp-action="SearchCase" id="search-case" method="get" class="m-5">
            <div class="row mx-auto">
                <div class="form-group mx-auto my-auto">
                    <input name="caseNumber" placeholder="Case number" class="form-control" />
                </div>
                <div class="form-group mx-auto my-auto">
                    <button type="submit" class="btn btn-success">SEARCH</button>
                </div>
            </div>
        </form>
    </section>
</div>

<div id="cases-table" class="text-center">
    <table class="table table-hover border">
        <thead>
            <tr class="table-active">
                <th scope="col">Created on</th>
                <th scope="col">Case number</th>
                <th scope="col">Subject</th>
                <th scope="col">Status</th>
                <th scope="col">Priority</th>
                <th scope="col">Agent</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var caseModel in Model.Cases)
            {
                <tr>
                    <td>@caseModel.CreatedOn</td>
                    <td>@caseModel.Number</td>
                    <td>@caseModel.Subject</td>
                    <td>@caseModel.Status</td>
                    <td>@caseModel.Priority</td>
                    <td>@caseModel.Agent</td>
                    <td><a class="btn btn-dark p-1" asp-controller="Cases" asp-action="ViewUpdate" asp-route-id="@caseModel.Id">VIEW/UPDATE</a></td>
                </tr>
            }

        </tbody>
    </table>

@if (Model.Cases.Length == 0)
{
    <h6>No cases available.</h6>
}

</div>

@* pagination *@

<div>
    <ul class="pagination justify-content-center">

        @if (Model.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">&laquo;</a>
            </li>
        }
        else if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-route-page="1">&laquo;</a>
            </li>
        }

        @* -5 and +5 so it can show 5 pages before and 5 pages ahead (if available) of the current one *@
        @for (int i = Model.CurrentPage - 5; i <= Model.CurrentPage + 5; i++)
        {
            if (i < 1)
            {
                continue;
            }
            if (i > Model.LastPage)
            {
                break;
            }
            if (Model.CurrentPage == i)
            {
                <li class="page-item active">
                    <a class="page-link" href="">@i</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-route-page="@i">@i</a>
                </li>
            }
        }

        @if (Model.CurrentPage < Model.LastPage)
        {
            <li class="page-item">
                <a class="page-link" asp-route-page="@Model.LastPage">&raquo;</a>
            </li>
        }
        else if (Model.AllCases > 0)
        {
            <li class="page-item disabled">
                <a class="page-link" href="">&raquo;</a>
            </li>
        }

    </ul>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
