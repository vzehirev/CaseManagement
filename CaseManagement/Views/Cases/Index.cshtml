@model CaseManagement.ViewModels.Cases.Output.AllCasesOutputModel

@if (Model.Announcements.Length > 0)
{
    <div class="marquee3k p-1"
         data-speed="0.9"
         data-pausable="true">
        <div id="marquee-content">@Html.Raw(Model.Announcements)</div>
    </div>
}

<div class="col-md-4 mx-auto text-center mt-5">
    <section>
        <h4>Cases</h4>
        <hr />
        <a class="btn btn-primary" asp-controller="Cases" asp-action="Create">Create Case</a>
        <form asp-action="SearchCase" id="search-case" method="get" class="m-5">
            <div class="row mx-auto">
                <div class="form-group mx-auto my-auto">
                    <input name="caseNumber" placeholder="Case number" class="form-control" />
                </div>
                <div class="form-group mx-auto my-auto">
                    <button type="submit" class="btn btn-success">SEARCH</button>
                </div>
            </div>
        </form>
    </section>
</div>

@* Order by logic for showing the order icon in the table's header *@
@{
    string PutOrderByIcon(string value)
    {
        string orderedAsc = "<img class=\"order-by-icon pl-1\" src=\"/img/arrow-up.png\">";
        string orderedDesc = "<img class=\"order-by-icon pl-1\" src=\"/img/arrow-down.png\">";

        var orderedByProp = Model.OrderedBy.Split('-').FirstOrDefault();
        var orderedByAscOrDesc = Model.OrderedBy.Split('-').LastOrDefault();

        if (value == orderedByProp)
        {
            return orderedByAscOrDesc == "asc" ?
                orderedAsc : orderedDesc;
        }

        return string.Empty;
    }
}

<div id="cases-table" class="text-center">
    <table class="table table-hover border">
        <thead>
            <tr class="table-active">
                <th scope="col">
                    <a data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Created on @Html.Raw(PutOrderByIcon("CreatedOn"))</a>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" asp-controller="Cases" asp-action="Index" asp-route-orderBy="CreatedOn-asc">Ascending</a>
                        <a class="dropdown-item" asp-controller="Cases" asp-action="Index" asp-route-orderBy="CreatedOn-desc">Descending</a>
                    </div>
                </th>
                <th scope="col">Case number</th>
                <th scope="col">Subject</th>
                <th scope="col">
                    <a data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Status @Html.Raw(PutOrderByIcon("Status"))</a>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" asp-controller="Cases" asp-action="Index" asp-route-orderBy="Status-asc">Ascending</a>
                        <a class="dropdown-item" asp-controller="Cases" asp-action="Index" asp-route-orderBy="Status-desc">Descending</a>
                    </div>
                </th>
                <th scope="col">
                    <a data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Priority @Html.Raw(PutOrderByIcon("Priority"))</a>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" asp-controller="Cases" asp-action="Index" asp-route-orderBy="Priority-asc">Ascending</a>
                        <a class="dropdown-item" asp-controller="Cases" asp-action="Index" asp-route-orderBy="Priority-desc">Descending</a>
                    </div>
                </th>
                <th scope="col">Agent</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var caseModel in Model.Cases)
            {
                <tr>
                    <td>@caseModel.CreatedOn</td>
                    <td>@caseModel.Number</td>
                    <td>@caseModel.Subject</td>
                    <td>@caseModel.Status</td>
                    <td>@caseModel.Priority</td>
                    <td>@caseModel.Agent</td>
                    <td><a class="btn btn-dark p-1" asp-controller="Cases" asp-action="ViewUpdate" asp-route-id="@caseModel.Id">VIEW/UPDATE</a></td>
                </tr>
            }

        </tbody>
    </table>

    @if (Model.Cases.Length == 0)
    {
        <h6>No cases available.</h6>
    }

    @* pagination *@

    <div>
        <ul class="pagination justify-content-center">

            @if (Model.CurrentPage == 1)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">&laquo;</a>
                </li>
            }
            else if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-route-page="1" asp-route-orderBy="@Model.OrderedBy">&laquo;</a>
                </li>
            }

            @{
                // -5 and +5 so it can show 5 pages before and 5 pages ahead (if available) of the current one
                int firstPageToShow = Model.CurrentPage - 5 < 1 ? 1 : Model.CurrentPage - 5;
                int lastPageToShow = Model.CurrentPage + 5 > Model.LastPage ? Model.LastPage : Model.CurrentPage + 5;

                for (int i = firstPageToShow; i <= lastPageToShow; i++)
                {
                    if (Model.CurrentPage == i)
                    {
                        <li class="page-item active">
                            <a class="page-link" href="#">@i</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" asp-route-page="@i" asp-route-orderBy="@Model.OrderedBy">@i</a>
                        </li>
                    }
                }
            }

            @if (Model.CurrentPage < Model.LastPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-route-page="@Model.LastPage" asp-route-orderBy="@Model.OrderedBy">&raquo;</a>
                </li>
            }
            else if (Model.AllCases > 0)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">&raquo;</a>
                </li>
            }

        </ul>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/marquee3k.js"></script>
    <script>Marquee3k.init();</script>
}
